{"version":3,"sources":["assets\\scripts\\Menu\\LoginSignUp.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;AAElF,iCAAiC;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDG","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n// assets/scripts/LoginManager.ts\r\n/*import { auth } from \"./FirebaseManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoginManager extends cc.Component {\r\n    @property(cc.EditBox)\r\n    emailEditBox: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    passwordEditBox: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    infoLabel: cc.Label = null;\r\n\r\n  // Email 註冊\r\n    onRegister() {\r\n        const email = this.emailEditBox.string;\r\n        const password = this.passwordEditBox.string;\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(userCredential => {\r\n                this.infoLabel.string = \"註冊成功：\" + userCredential.user.email;\r\n            })\r\n        .catch(error => {\r\n            this.infoLabel.string = \"註冊失敗：\" + error.message;\r\n        });\r\n    }\r\n\r\n  // Email 登入\r\n    onLogin() {\r\n        const email = this.emailEditBox.string;\r\n        const password = this.passwordEditBox.string;\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then(userCredential => {\r\n            this.infoLabel.string = \"登入成功：\" + userCredential.user.email;\r\n        })\r\n        .catch(error => {\r\n            this.infoLabel.string = \"登入失敗：\" + error.message;\r\n        });\r\n    }\r\n\r\n  // Google 登入\r\n    onGoogleLogin() {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider)\r\n        .then(result => {\r\n            this.infoLabel.string = \"Google 登入成功：\" + result.user.email;\r\n        })\r\n        .catch(error => {\r\n            this.infoLabel.string = \"Google 登入失敗：\" + error.message;\r\n        });\r\n    }\r\n}*/\r\n\r\n"]}