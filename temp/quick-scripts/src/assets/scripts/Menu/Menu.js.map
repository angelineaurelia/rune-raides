{"version":3,"sources":["assets/scripts/Menu/Menu.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Menu extends cc.Component {\n    @property(cc.Button)\n    ExitButton: cc.Button = null;\n\n    @property(cc.AudioClip)\n    Menubgm: cc.AudioClip = null;\n\n    public VolumnValue: number = 0.5;\n\n    onLoad(){\n        let savedVolumn = cc.sys.localStorage.getItem(\"VolumnValue\");\n        if (savedVolumn !== null) this.VolumnValue = Number(savedVolumn);\n        else this.VolumnValue = 0.5;\n        this.playbgm();\n        cc.audioEngine.setMusicVolume(this.VolumnValue);\n        cc.audioEngine.setEffectsVolume(this.VolumnValue);\n        cc.sys.localStorage.setItem(\"VolumnValue\", this.VolumnValue.toString());\n\n        let exitHandler = new cc.Component.EventHandler();\n        exitHandler.target = this.node;\n        exitHandler.component = \"Menu\";\n        exitHandler.handler = \"ExitButtonEvent\";\n        this.ExitButton.clickEvents.push(exitHandler);\n    }\n\n    start(){\n\n        let MapButton = new cc.Component.EventHandler();\n        MapButton.target = this.node;\n        MapButton.component = \"Menu\";\n        MapButton.handler = \"LoadMap\";\n        cc.find(\"Canvas/background/MapButton\").getComponent(cc.Button).clickEvents.push(MapButton);\n    }\n    LoadGame(){\n        cc.director.loadScene(\"Loading\", () => {\n            let loadingManager = cc.find(\"Canvas/LoadingManager\").getComponent(\"LoadingManager\");\n            loadingManager.startLoading(\"demo\");\n        });\n    }\n\n    LoadMap(){\n        cc.director.loadScene(\"Loading\", () => {\n            let loadingManager = cc.find(\"Canvas/LoadingManager\").getComponent(\"LoadingManager\");\n            loadingManager.startLoading(\"demo_test\");\n        });\n    }\n    ExitButtonEvent(){\n        cc.game.end();\n    }\n    playbgm(){\n        if (this.Menubgm) {\n            cc.audioEngine.playMusic(this.Menubgm, true);\n        } else {\n            cc.error(\"BGM not assigned!\");\n        }\n    }\n}\n"]}