{"version":3,"sources":["assets/scripts/input/KeyboardControls.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport Controller from \"./Controller\";\nimport { ButtonState, IInputControls } from \"./IInputControls\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class KeyboardControls\n    extends cc.Component\n    implements IInputControls {\n\n    private _hAxis: number = 0;\n    public get horizontalAxis(): number { return this._hAxis }\n\n    private _vAxis: number = 0;\n    public get verticalAxis(): number { return this._vAxis }\n\n    private _kKey: ButtonState = ButtonState.Rest;\n    public get attack(): ButtonState { return this._kKey }\n    public get interact(): ButtonState { return this._kKey }\n\n    private _xKey: ButtonState = ButtonState.Rest;\n    public get gethurt(): ButtonState { return this._xKey }\n\n    private _jKey: ButtonState = ButtonState.Rest;\n    public get attack2(): ButtonState { return this._jKey }\n\n    private _lKey: ButtonState = ButtonState.Rest;\n    public get attack3(): ButtonState { return this._lKey }\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() { }\n\n    start() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    // update (dt) {}\n\n    onKeyDown(event: cc.Event.EventKeyboard) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this._hAxis = -1;\n                break;\n            case cc.macro.KEY.d:\n                this._hAxis = 1;\n                break;\n            case cc.macro.KEY.w:\n                this._vAxis = 1;\n                break;\n            case cc.macro.KEY.s:\n                this._vAxis = -1;\n                break;\n            case cc.macro.KEY.j: \n                if (this._kKey === ButtonState.Rest || this._kKey === ButtonState.Released) {\n                    this._kKey = ButtonState.Pressed;\n                } else {\n                    this._kKey = ButtonState.Held;\n                }\n                break;\n            case cc.macro.KEY.x: \n                if (this._xKey === ButtonState.Rest || this._xKey === ButtonState.Released) {\n                    this._xKey = ButtonState.Pressed;\n                    \n                } else {\n                    this._xKey = ButtonState.Held;\n                }\n                break;\n            case cc.macro.KEY.k: \n                if (this._jKey === ButtonState.Rest || this._jKey === ButtonState.Released) {\n                    this._jKey = ButtonState.Pressed;\n                } else {\n                    this._jKey = ButtonState.Held;\n                }\n                break;\n            case cc.macro.KEY.l:\n                if (this._lKey === ButtonState.Rest || this._lKey === ButtonState.Released) {\n                    this._lKey = ButtonState.Pressed;\n                } else {\n                    this._lKey = ButtonState.Held;\n                }\n                break;\n        }\n        this._vAxis = clamp(this._vAxis);\n        this._hAxis = clamp(this._hAxis);\n    }\n\n    onKeyUp(event: cc.Event.EventKeyboard) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this._hAxis += 1;\n                break;\n            case cc.macro.KEY.d:\n                this._hAxis -= 1;\n                break;\n            case cc.macro.KEY.w:\n                this._vAxis -= 1;\n                break;\n            case cc.macro.KEY.s:\n                this._vAxis += 1;\n                break;\n            case cc.macro.KEY.j: \n                if (this._kKey === ButtonState.Pressed || this._kKey === ButtonState.Held) {\n                    this._kKey = ButtonState.Released;\n                } else {\n                    this._kKey = ButtonState.Rest;\n                }\n                break;\n            case cc.macro.KEY.x: \n                if (this._xKey === ButtonState.Pressed || this._xKey === ButtonState.Held) {\n                    this._xKey = ButtonState.Released;\n                } else {\n                    this._xKey = ButtonState.Rest;\n                }\n                break;\n            case cc.macro.KEY.k: \n                if (this._jKey === ButtonState.Pressed || this._jKey === ButtonState.Held) {\n                    this._jKey = ButtonState.Released;\n                } else {\n                    this._jKey = ButtonState.Rest;\n                }\n                break;\n            case cc.macro.KEY.l: \n                if (this._lKey === ButtonState.Pressed || this._lKey === ButtonState.Held) {\n                    this._lKey = ButtonState.Released;\n                } else {\n                    this._lKey = ButtonState.Rest;\n                }\n                break;\n        }\n        this._vAxis = clamp(this._vAxis);\n        this._hAxis = clamp(this._hAxis);\n    }\n\n}\n\nfunction clamp(value: number, a: number = -1, b: number = 1) {\n    if (value < a) return a;\n    if (value > b) return b;\n    return value;\n}"]}