{"version":3,"sources":["assets/scripts/Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Player.ts\n\nconst { ccclass, property } = cc._decorator;\nimport GameManager from \"./GameManager\";\nimport BlueSlimeAI from \"./ai/BlueSlimeAI\";\n\ntype FacingDirection = \"up\" | \"down\" | \"left\" | \"right\";\n\n@ccclass\nexport default class Player extends cc.Component {\n    @property({ type: cc.Integer, tooltip: \"最大血量\" })\n    maxHp: number = 40;\n\n    @property({ type: cc.Integer, tooltip: \"攻擊力\" })\n    attackPower: number = 5;\n\n    @property({ type: cc.Integer, tooltip: \"初始血量\" })\n    hp: number = 40;\n\n    @property(cc.Node)\n    private lifebar: cc.Node = null;\n\n    @property(cc.Node)\n    controller: cc.Node = null;\n\n    @property(cc.AudioClip)\n    attack1sound: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    attack2sound: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    attack3sound: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    hurtsound: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    healsound: cc.AudioClip = null;\n\n    @property(GameManager)\n    gameManager: GameManager = null;\n\n    public holdingKey: boolean = false;\n\n    /////////////////////////\n    // → NEW PROPERTIES ← //\n    /////////////////////////\n\n    // How far the player's attack reaches (in pixels, world-space)\n    @property({ type: cc.Integer, tooltip: \"Player attack range in pixels\" })\n    attackRange: number = 50;\n\n    // Delay (seconds) into the attack animation when damage is actually applied\n    @property({ type: cc.Float, tooltip: \"When (sec) to check hit in attack anim\" })\n    attackHitDelay: number = 0.2;\n\n    // Total length (seconds) of the attack animation\n    @property({ type: cc.Float, tooltip: \"Length of PlayerAttack animation\" })\n    attackAnimDuration: number = 0.5;\n\n    private isAttacking: boolean = false; // Prevent overlapping swings\n\n    /////////////////////////\n    // ← END NEW PROPS → //\n    /////////////////////////\n\n    private anim!: cc.Animation;\n\n    // Tracks which direction the player is facing.\n    // You should update this value whenever your movement code changes direction.\n    // Default is \"down\" if you don’t explicitly set it.\n    private facing: FacingDirection = \"down\";\n    private isDead: boolean = false;//new\n\n    onLoad() {\n        // Capture the Animation component once\n        this.anim = this.getComponent(cc.Animation)!;\n\n        // Listen for keyboard input to trigger attack\n        cc.systemEvent.on(\n            cc.SystemEvent.EventType.KEY_DOWN,\n            this.onKeyDown,\n            this\n        );\n    }\n\n    onDestroy() {\n        // Clean up listener\n        cc.systemEvent.off(\n            cc.SystemEvent.EventType.KEY_DOWN,\n            this.onKeyDown,\n            this\n        );\n    }\n\n    // Called when any key is pressed\n    private onKeyDown(event: cc.Event.EventKeyboard) {\n        // Use Space as the attack key (change if you prefer another key)\n        if (event.keyCode === cc.macro.KEY.c) {\n            this.tryAttack();\n        }\n    }\n\n    // Attempt to start an attack (if not already in one)\n    private tryAttack() {\n        if (this.isAttacking) return;\n        this.isAttacking = true;\n\n        // 1) Play attack animation & sound\n        if (this.anim) {\n            this.anim.play(\"PlayerAttack\"); // ensure you have a clip named “PlayerAttack”\n        }\n        if (this.attack1sound) {\n            cc.audioEngine.playEffect(this.attack1sound, false);\n        }\n\n        // 2) Schedule the actual “hit” moment\n        this.scheduleOnce(this.applyAttackHit, this.attackHitDelay);\n\n        // 3) Once the full animation is done, allow attacking again\n        this.scheduleOnce(() => {\n            this.isAttacking = false;\n        }, this.attackAnimDuration);\n    }\n\n    // Runs attackHitDelay seconds into the swing to check for any slimes in range\n    private applyAttackHit() {\n        // 1) Convert the player's position to world space (Vec3) and then to Vec2\n        const playerWorld3 = this.node.convertToWorldSpaceAR(cc.v3(0, 0, 0));\n        const playerWorld2 = cc.v2(playerWorld3.x, playerWorld3.y);\n\n        // 2) Find all slimes under “Canvas/MapManager/Actors”\n        const actorsRoot = cc.find(\"Canvas/MapManager/MonsterManager\");\n        if (!actorsRoot) return;\n\n        actorsRoot.children.forEach((childNode) => {\n            const slimeComp = childNode.getComponent(BlueSlimeAI);\n            if (!slimeComp) return; // skip non‐slime nodes\n\n            // 3) Convert that slime’s position to world-space Vec2\n            const slimeWorld3 = childNode.convertToWorldSpaceAR(cc.v3(0, 0, 0));\n            const slimeWorld2 = cc.v2(slimeWorld3.x, slimeWorld3.y);\n\n            // 4) Distance check\n            const dist = playerWorld2.sub(slimeWorld2).mag();\n            if (dist <= this.attackRange) {\n                // 5) Slash hits this slime → deal damage\n                slimeComp.takeDamage(this.attackPower);\n                // (Optional) If you only want one slime per swing, uncomment:\n                // return;\n            }\n            \n        });\n    }\n\n    /////////////////////////\n    // ← EXISTING METHODS →//\n    /////////////////////////\n\n    public get worldPosition(): cc.Vec3 {\n        return this.node.convertToWorldSpaceAR(cc.v3(0, 0, 0));\n    }\n\n    public get localPosition(): cc.Vec3 {\n        return this.node.position;\n    }\n\n    public takeDamage(amount: number) {\n        this.hp -= amount;\n        if (this.hp < 0) this.hp = 0;\n\n        // 1) If still alive → play “hurt” animation in the correct direction\n        if (this.hp > 0) {\n            switch (this.facing) {\n                case \"up\":\n                    this.anim.play(\"hurt_up\");\n                    break;\n                case \"down\":\n                    this.anim.play(\"hurt_down\");\n                    break;\n                case \"left\":\n                    this.anim.play(\"hurt_left\");\n                    break;\n                case \"right\":\n                    this.anim.play(\"hurt_right\");\n                    break;\n                default:\n                    // fallback, just in case\n                    this.anim.play(`hurt_${this.facing}`);\n                    break;\n            }\n            this.updatelife(-amount, this.hp);\n\n            if (this.hurtsound) {\n                cc.audioEngine.playEffect(this.hurtsound, false);\n            }\n            return; // exit early, no death logic yet\n        }\n        \n        // 2) HP has dropped to zero → play “death” animation in the correct direction\n        switch (this.facing) {\n            case \"up\":\n                this.anim.play(\"death_up\");\n                break;\n            case \"down\":\n                this.anim.play(\"death_down\");\n                break;\n            case \"left\":\n                this.anim.play(\"death_left\");\n                break;\n            case \"right\":\n                this.anim.play(\"death_right\");\n                break;\n            default:\n                // fallback, just in case\n                this.anim.play(`death_${this.facing}`);\n                break;\n        }\n        this.updatelife(-amount, this.hp);\n\n        // (Optional) play a death sound here if you want\n        // if (this.deathsound) cc.audioEngine.playEffect(this.deathsound, false);\n        this.isDead = true;\n        // 3) Delay the actual “freeze/game-over” until after the death animation finishes.\n        //    Suppose each death clip is about 1.0 second long; adjust as needed.\n        this.scheduleOnce(() => {\n            this.die();\n        }, 1.0);\n    }\n\n\n    public heal(amount: number) {\n        this.hp += amount;\n        if (this.hp > this.maxHp) this.hp = this.maxHp;\n        this.updatelife(amount, this.hp);\n        this.playhealsound();\n    }\n\n    public attack(target: Player) {\n        target.takeDamage(this.attackPower);\n    }\n\n    public die() {\n        // Hand over to your game‐over/freeze logic\n        this.controller.getComponent(\"ActorController\").godie();\n        this.unscheduleAllCallbacks();\n    }\n\n    updatelife(num: number, hp: number) {\n        this.lifebar.width = hp;\n        if (hp <= 10) this.lifebar.color = cc.Color.RED;\n        else if (hp <= 20) this.lifebar.color = cc.Color.ORANGE;\n        else this.lifebar.color = cc.Color.GREEN;\n    }\n\n    public playattack1sound() {\n        if (this.attack1sound) cc.audioEngine.playEffect(this.attack1sound, false);\n        else console.log(\"No attack1 sound\");\n    }\n\n    public playattack2sound() {\n        if (this.attack2sound) cc.audioEngine.playEffect(this.attack2sound, false);\n        else console.log(\"No attack2 sound\");\n    }\n\n    public playattack3sound() {\n        if (this.attack3sound) cc.audioEngine.playEffect(this.attack3sound, false);\n        else console.log(\"No attack3 sound\");\n    }\n\n    public playhurtsound() {\n        if (this.hurtsound) cc.audioEngine.playEffect(this.hurtsound, false);\n        else console.log(\"No hurtsound\");\n    }\n\n    public playhealsound() {\n        if (this.healsound) cc.audioEngine.playEffect(this.healsound, false);\n        else console.log(\"No healsound\");\n    }\n\n    public SetPlayer(level: number) {\n        // reset player position & HP\n        this.hp = this.maxHp;\n        this.updatelife(0, this.hp);\n        this.node.setPosition(20, 20);\n        this.holdingKey = false;\n    }\n\n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (otherCollider.node.name == \"key\") {\n            this.holdingKey = true;\n            otherCollider.node.active = false;\n        }\n        if (otherCollider.node.name == \"lock\") {\n            const temp = otherCollider.getComponent(\"NewClass\");\n            if (temp) {\n                temp.playAnim();\n            }\n            this.scheduleOnce(() => {\n                otherCollider.node.destroy();\n                this.gameManager.GoNextLevel();\n            }, 1.2);\n        }\n    }\n\n    onDisable() {\n        this.unscheduleAllCallbacks();\n    }\n}\n"]}