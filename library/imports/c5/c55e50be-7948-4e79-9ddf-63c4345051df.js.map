{"version":3,"sources":["assets/scripts/Menu/LoginSignUp.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;AAElF,iCAAiC;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDG","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\n// assets/scripts/LoginManager.ts\n/*import { auth } from \"./FirebaseManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoginManager extends cc.Component {\n    @property(cc.EditBox)\n    emailEditBox: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    passwordEditBox: cc.EditBox = null;\n\n    @property(cc.Label)\n    infoLabel: cc.Label = null;\n\n  // Email 註冊\n    onRegister() {\n        const email = this.emailEditBox.string;\n        const password = this.passwordEditBox.string;\n        auth.createUserWithEmailAndPassword(email, password)\n            .then(userCredential => {\n                this.infoLabel.string = \"註冊成功：\" + userCredential.user.email;\n            })\n        .catch(error => {\n            this.infoLabel.string = \"註冊失敗：\" + error.message;\n        });\n    }\n\n  // Email 登入\n    onLogin() {\n        const email = this.emailEditBox.string;\n        const password = this.passwordEditBox.string;\n        auth.signInWithEmailAndPassword(email, password)\n        .then(userCredential => {\n            this.infoLabel.string = \"登入成功：\" + userCredential.user.email;\n        })\n        .catch(error => {\n            this.infoLabel.string = \"登入失敗：\" + error.message;\n        });\n    }\n\n  // Google 登入\n    onGoogleLogin() {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.signInWithPopup(provider)\n        .then(result => {\n            this.infoLabel.string = \"Google 登入成功：\" + result.user.email;\n        })\n        .catch(error => {\n            this.infoLabel.string = \"Google 登入失敗：\" + error.message;\n        });\n    }\n}*/\n\n"]}