{"version":3,"sources":["assets\\scripts\\LeaderboardManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAuC;AAC/B,IAAA,OAAO,GAAK,EAAE,CAAC,UAAU,QAAlB,CAAmB;AAIlC;IAAgD,sCAAY;IAA5D;;IAoDA,CAAC;IAlDC,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,EAAE,CAAC,KAAK,CAAC,iFAAiF,CAAC,CAAC;YAC5F,OAAO;SACR;IACH,CAAC;IAED,yCAAyC;IAClC,yCAAY,GAAnB,UAAoB,KAAa;QAC/B,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,IAAI,EAAE;YACT,EAAE,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;YAChE,OAAO;SACR;QAED,IAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;QAChC,IAAM,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3D,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAA,GAAG;YACpB,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,KAAK,GAAG,IAAI,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC;oBACV,QAAQ,EAAE,IAAI,CAAC,WAAW,IAAI,SAAS;oBACvC,YAAY,EAAE,KAAK;iBACpB,CAAC,CAAC;gBACH,EAAE,CAAC,GAAG,CAAC,0BAAwB,IAAI,CAAC,WAAW,kBAAa,KAAO,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;YACV,EAAE,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iEAAiE;IAC1D,4CAAe,GAAtB,UAAuB,KAAkB;QAAlB,sBAAA,EAAA,UAAkB;QACvC,IAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;QAChC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC;aACzB,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC;aAC/B,KAAK,CAAC,KAAK,CAAC;aACZ,GAAG,EAAE;aACL,IAAI,CAAC,UAAA,QAAQ;YACZ,QAAQ,CAAC,OAAO,CAAC,UAAA,GAAG;gBAClB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACxB,EAAE,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,gBAAW,IAAI,CAAC,YAAc,CAAC,CAAC;gBACvD,yDAAyD;YAC3D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,GAAG;YACR,EAAE,CAAC,KAAK,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;IAnDkB,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAoDtC;IAAD,yBAAC;CApDD,AAoDC,CApD+C,EAAE,CAAC,SAAS,GAoD3D;kBApDoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["// assets/scripts/LeaderboardManager.ts\r\nconst { ccclass } = cc._decorator;\r\ndeclare const firebase: any;\r\n\r\n@ccclass\r\nexport default class LeaderboardManager extends cc.Component {\r\n\r\n  onLoad() {\r\n    if (!window._firebaseInited) {\r\n      cc.error(\"Firebase not initialized. Make sure FirebaseInit.ts is in the scene and active.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Call this when player finishes a level\r\n  public saveProgress(level: number) {\r\n    const user = firebase.auth().currentUser;\r\n    if (!user) {\r\n      cc.warn(\"No logged-in user; cannot save leaderboard progress.\");\r\n      return;\r\n    }\r\n\r\n    const db = firebase.firestore();\r\n    const userRef = db.collection(\"leaderboard\").doc(user.uid);\r\n\r\n    userRef.get().then(doc => {\r\n      const prev = doc.exists ? doc.data().highestLevel : 0;\r\n      if (level > prev) {\r\n        userRef.set({\r\n          username: user.displayName || \"Unknown\",\r\n          highestLevel: level\r\n        });\r\n        cc.log(`Progress updated for ${user.displayName} to level ${level}`);\r\n      }\r\n    }).catch(err => {\r\n      cc.error(\"Error accessing leaderboard:\", err);\r\n    });\r\n  }\r\n\r\n  // Call this to display top players (e.g., in leaderboard screen)\r\n  public loadLeaderboard(limit: number = 10) {\r\n    const db = firebase.firestore();\r\n    db.collection(\"leaderboard\")\r\n      .orderBy(\"highestLevel\", \"desc\")\r\n      .limit(limit)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          cc.log(`${data.username}: Level ${data.highestLevel}`);\r\n          // You can add logic here to populate your leaderboard UI\r\n        });\r\n      })\r\n      .catch(err => {\r\n        cc.error(\"Failed to load leaderboard:\", err);\r\n      });\r\n  }\r\n}\r\n"]}