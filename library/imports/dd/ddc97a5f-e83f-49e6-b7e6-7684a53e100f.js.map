{"version":3,"sources":["assets/scripts/ai/GreenBossAI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\nenum SlimeState {\n  Idle,\n  Walk,\n  Run,\n  Attack\n}\n\n@ccclass\nexport default class GreenBossAI extends cc.Component {\n  @property({ tooltip: \"Walk speed in pixels/sec\" })\n  walkSpeed = 100;\n\n  @property({ tooltip: \"Run speed in pixels/sec\" })\n  runSpeed = 200;\n\n  @property({ tooltip: \"Idle duration before moving (sec)\" })\n  idleTime = 5;\n\n  @property({ tooltip: \"Walk duration per direction (sec)\" })\n  walkTime = 5;\n\n  @property({ tooltip: \"Patrol radius from start (px)\" })\n  patrolRadius = 200;\n\n  @property({ tooltip: \"Detection radius (px)\" })\n  detectionRadius = 150;\n\n  @property({ tooltip: \"Normal attack radius (px)\" })\n  attackRadius = 50;\n\n  @property({ tooltip: \"Special attack radius when <50% HP (px)\" })\n  specAttackRadius = 100;\n\n  @property({ tooltip: \"Wind-up before any attack (sec)\" })\n  timeBeforeAttack = 1;\n\n  @property({ tooltip: \"Damage of normal attack\" })\n  attackDamage = 20;\n\n  @property({ tooltip: \"Damage of special attack\" })\n  specAttackDamage = 40;\n\n  @property({ tooltip: \"Max HP\" })\n  maxHealth = 200;\n\n  @property({ tooltip: \"Current HP\" })\n  health = 200;\n\n  // —— new lifebar property ——  \n  @property(cc.Node)\n  private lifebar: cc.Node = null;\n\n  @property({ tooltip: \"Health bar vertical offset (px)\" })\n  private barOffsetY = 60;\n\n  //@property({ type: cc.Node, tooltip: \"Player node\" })\n  //player: cc.Node = null;\n  \n  public player: cc.Node = null;\n  private state = SlimeState.Idle;\n  private timer = 0;\n  private direction = cc.v2(0, 0);\n  private patrolCenter!: cc.Vec2;\n\n  private boundaryNode!: cc.Node;\n  private detectionNode!: cc.Node;\n  private detectionGfx!: cc.Graphics;\n  private attackNode!: cc.Node;\n  private attackGfx!: cc.Graphics;\n\n  private anim!: cc.Animation;\n  private currentRunClip = \"\";\n\n  start() {\n    this.player = cc.find(\"Canvas/MapManager/Actors/Player\") as cc.Node;\n    if (!this.player) cc.error(\"Player node not found\");\n\n    this.anim = this.getComponent(cc.Animation)!;\n    this.patrolCenter = this.node.getPosition().clone();\n\n    // draw patrol boundary (optional)\n    this.boundaryNode = new cc.Node(\"Boundary\");\n    this.boundaryNode.parent = this.node.parent!;\n    this.boundaryNode.setPosition(this.patrolCenter);\n    const bGfx = this.boundaryNode.addComponent(cc.Graphics);\n    bGfx.lineWidth = 2;\n    bGfx.strokeColor = cc.color(0, 255, 0);\n    bGfx.circle(0, 0, this.patrolRadius);\n    bGfx.stroke();\n\n    // detection area node\n    this.detectionNode = new cc.Node(\"Detect\");\n    this.detectionNode.parent = this.node;\n    this.detectionGfx = this.detectionNode.addComponent(cc.Graphics);\n    this.detectionGfx.lineWidth = 2;\n\n    // attack area node\n    this.attackNode = new cc.Node(\"Attack\");\n    this.attackNode.parent = this.node;\n    this.attackGfx = this.attackNode.addComponent(cc.Graphics);\n    this.attackGfx.lineWidth = 2;\n\n    // —— health bar setup ——  \n    if (this.lifebar) {\n      // position bar above boss\n      this.lifebar.setPosition(0, this.node.height / 2 + this.barOffsetY);\n      // initialize its width/color\n      this.updateLife(0, this.health);\n    }\n\n    this.setIdle();\n  }\n\n  update(dt: number) {\n    if (!this.player) return;\n\n    // 1) world-space distance\n    const bossW = this.node.parent!.convertToWorldSpaceAR(this.node.position);\n    const playerW = this.player.parent!.convertToWorldSpaceAR(this.player.position);\n    const dist = bossW.sub(playerW).mag();\n\n    // 2) patrol-bound check\n    const localP = this.node.parent!.convertToNodeSpaceAR(playerW);\n    const fromCenter = localP.sub(this.patrolCenter).mag();\n    const inPatrol = fromCenter <= this.patrolRadius;\n\n    // 3) choose radii & draw circles\n    const useSpec = this.health <= this.maxHealth * 0.5;\n    const rawAttackR = useSpec ? this.specAttackRadius : this.attackRadius;\n    const drawDetectR = Math.min(this.detectionRadius, this.patrolRadius);\n    const drawAttackR = Math.min(rawAttackR, this.patrolRadius);\n\n    this.detectionGfx.clear();\n    const inDetect = dist <= this.detectionRadius && inPatrol;\n    this.detectionGfx.strokeColor = inDetect ? cc.color(255, 165, 0) : cc.color(255, 0, 0);\n    this.detectionGfx.circle(0, 0, drawDetectR);\n    this.detectionGfx.stroke();\n\n    this.attackGfx.clear();\n    const inRange = dist <= rawAttackR && inPatrol;\n    this.attackGfx.strokeColor = inRange ? cc.color(128, 0, 128) : cc.color(0, 0, 255);\n    this.attackGfx.circle(0, 0, drawAttackR);\n    this.attackGfx.stroke();\n\n    // 4) attack state\n    if (this.state !== SlimeState.Attack && inRange) {\n      this.timer = 0;\n      if (useSpec) this.startSpecAttack();\n      else this.startAttack();\n      return;\n    }\n    if (this.state === SlimeState.Attack) return;\n\n    // 5) run state\n    if (inDetect) {\n      if (this.state !== SlimeState.Run) this.startRun();\n      this.runTowardsPlayer(dt);\n      return;\n    } else if (this.state === SlimeState.Run) {\n      this.setIdle();\n    }\n\n    // 6) patrol fallback\n    this.timer += dt;\n    if (this.state === SlimeState.Idle && this.timer >= this.idleTime) this.startWalk();\n    if (this.state === SlimeState.Walk) this.patrolMovement(dt);\n  }\n\n  // —— life‐bar updater ——  \n  private updateLife(delta: number, hp: number) {\n    console.log(\"boss hp:\", delta, \"→\", hp);\n    if (!this.lifebar) return;\n    this.lifebar.width = hp;                     // direct px = hp\n    if (hp <= 50)         this.lifebar.color = cc.Color.RED;\n    else if (hp <= 100)   this.lifebar.color = cc.Color.ORANGE;\n    else                  this.lifebar.color = cc.Color.GREEN;\n  }\n\n  public takeDamage(amount: number) {\n    this.health -= amount;\n    if (this.health < 0) this.health = 0;\n    this.updateLife(-amount, this.health);\n    if (this.health === 0) this.die();\n  }\n\n  private die() {\n    this.node.destroy();\n  }\n\n  private setIdle() {\n    this.state = SlimeState.Idle;\n    this.timer = 0;\n    this.anim.play(\"GreenBossIdle\");\n  }\n\n  private startWalk() {\n    this.state = SlimeState.Walk;\n    this.timer = 0;\n    this.direction = cc.v2(\n      Math.random() < 0.5 ? -1 : 1,\n      Math.random() < 0.5 ? -1 : 1\n    ).normalize();\n    const clip = Math.abs(this.direction.x) > Math.abs(this.direction.y)\n      ? (this.direction.x > 0 ? \"GreenBossWalkRight\" : \"GreenBossWalkLeft\")\n      : (this.direction.y > 0 ? \"GreenBossWalkUp\" : \"GreenBossWalkDown\");\n    this.anim.play(clip);\n  }\n\n  private startRun() {\n    this.state = SlimeState.Run;\n    this.currentRunClip = \"\";\n  }\n\n  private startAttack() {\n    this.state = SlimeState.Attack;\n    this.anim.play(\"GreenBossIdle\");\n    this.scheduleOnce(\n      () => this.performAttack(this.attackDamage, this.attackRadius, \"GreenBossAttack\"),\n      this.timeBeforeAttack\n    );\n  }\n\n  private startSpecAttack() {\n    this.state = SlimeState.Attack;\n    this.anim.play(\"GreenBossIdle\");\n    this.scheduleOnce(\n      () => this.performAttack(this.specAttackDamage, this.specAttackRadius, \"GreenBossSpecAttack\"),\n      this.timeBeforeAttack\n    );\n  }\n\n  private performAttack(dmg: number, range: number, baseClip: string) {\n    const dir = this.getRunDirection();\n    const clip = Math.abs(dir.x) > Math.abs(dir.y)\n      ? (dir.x > 0 ? `${baseClip}Right` : `${baseClip}Left`)\n      : (dir.y > 0 ? `${baseClip}Up`    : `${baseClip}Down`);\n    this.anim.play(clip);\n\n    // deal damage if still in range\n    const bossW = this.node.parent!.convertToWorldSpaceAR(this.node.position);\n    const playerW = this.player.parent!.convertToWorldSpaceAR(this.player.position);\n    if (bossW.sub(playerW).mag() <= range) {\n      const hc: any = this.player.getComponent(\"Health\");\n      if (hc?.takeDamage) hc.takeDamage(dmg);\n    }\n\n    this.scheduleOnce(() => this.setIdle(), 1);\n  }\n\n  private patrolMovement(dt: number) {\n    const delta = this.direction.mul(this.walkSpeed * dt);\n    const next = this.node.getPosition().add(delta);\n    if (next.sub(this.patrolCenter).mag() > this.patrolRadius) {\n      this.setIdle();\n      return;\n    }\n    this.node.setPosition(next);\n    if (this.timer >= this.walkTime) this.setIdle();\n  }\n\n  private runTowardsPlayer(dt: number) {\n    const dir = this.getRunDirection();\n    const clip = Math.abs(dir.x) > Math.abs(dir.y)\n      ? (dir.x > 0 ? \"GreenBossRunRight\" : \"GreenBossRunLeft\")\n      : (dir.y > 0 ? \"GreenBossRunUp\" : \"GreenBossRunDown\");\n    if (clip !== this.currentRunClip) {\n      this.anim.play(clip);\n      this.currentRunClip = clip;\n    }\n    const next = this.node.getPosition().add(dir.mul(this.runSpeed * dt));\n    if (next.sub(this.patrolCenter).mag() > this.patrolRadius) {\n      this.setIdle();\n      return;\n    }\n    this.node.setPosition(next);\n  }\n\n  private getRunDirection(): cc.Vec2 {\n    const worldP  = this.player.parent!.convertToWorldSpaceAR(this.player.position);\n    const localP  = this.node.parent!.convertToNodeSpaceAR(worldP);\n    return cc.v2(localP.x - this.node.x, localP.y - this.node.y).normalize();\n  }\n}\n"]}